{"mappings":"AAAA,IAAIA,QAAU,KAgCd,SAASC,yBAAyBC,GAIhC,GAAwB,mBAApBA,EAAEC,QAAQC,OAAiD,gBAAnBF,EAAEC,QAAQE,KAEtD,OAAOC,MAAMJ,EAAEC,SAASI,MAAKC,GAEtBA,EAAIC,IAEL,IAAIC,IAAIF,EAAIC,KAAKE,SAAWC,SAASD,OAAeH,EAEjDK,OAAOC,KAAKd,SAASO,MAAKH,IAE/BA,EAAMW,IAAIb,EAAEC,QAASK,EAAIQ,SAClBR,KAPYA,IASpBS,OAAMC,GAAOC,QAAQC,MAAMlB,EAAEC,QAAQM,IAAKS,IAC/C,CAEA,SAASG,mBAAmBnB,GAC1B,OAAOD,yBAAyBC,EAClC,CApDAoB,KAAKC,iBAAiB,WAAW,SAASrB,GACxCA,EAAEsB,UAAUX,OAAOC,KAAKd,SAASO,MAAKH,GAC7BA,EAAMqB,OAAO,MAExB,IAEAH,KAAKC,iBAAiB,SAAS,SAASrB,GACtC,IAAIwB,EAAmBb,OAAOC,KAAKd,SAASO,MAAKH,GACxCA,EAAMuB,MAAMzB,EAAEC,SAASI,MAAKqB,GAC5BA,GAIL3B,yBAAyBC,GAElB0B,GALEP,mBAAmBnB,OAQhCA,EAAE2B,YAAYH,EAChB,IAEAJ,KAAKC,iBAAiB,YAAY,SAASrB,GACzCA,EAAEsB,UAAUX,OAAOiB,OAAOvB,MAAKuB,GACtBC,QAAQC,IAAIF,EAAKG,KAAIC,IAC1B,GAAIA,IAAQlC,QACV,OAAOa,OAAOsB,OAAOD,EAAA,OAG7B","sources":["src/js/service-worker.js"],"sourcesContent":["var VERSION = '24';\r\n\r\nthis.addEventListener('install', function(e) {\r\n  e.waitUntil(caches.open(VERSION).then(cache => {\r\n    return cache.addAll([]);\r\n  }))\r\n});\r\n\r\nthis.addEventListener('fetch', function(e) {\r\n  var tryInCachesFirst = caches.open(VERSION).then(cache => {\r\n    return cache.match(e.request).then(response => {\r\n      if (!response) {\r\n        return handleNoCacheMatch(e);\r\n      }\r\n      // Update cache record in the background\r\n      fetchFromNetworkAndCache(e);\r\n      // Reply with stale data\r\n      return response\r\n    });\r\n  });\r\n  e.respondWith(tryInCachesFirst);\r\n});\r\n\r\nthis.addEventListener('activate', function(e) {\r\n  e.waitUntil(caches.keys().then(keys => {\r\n    return Promise.all(keys.map(key => {\r\n      if (key !== VERSION)\r\n        return caches.delete(key);\r\n    }));\r\n  }));\r\n});\r\n\r\nfunction fetchFromNetworkAndCache(e) {\r\n  // DevTools opening will trigger these o-i-c requests, which this SW can't handle.\r\n  // There's probaly more going on here, but I'd rather just ignore this problem. :)\r\n  // https://github.com/paulirish/caltrainschedule.io/issues/49\r\n  if (e.request.cache === 'only-if-cached' && e.request.mode !== 'same-origin') return;\r\n\r\n  return fetch(e.request).then(res => {\r\n    // foreign requests may be res.type === 'opaque' and missing a url\r\n    if (!res.url) return res;\r\n    // regardless, we don't want to cache other origin's assets\r\n    if (new URL(res.url).origin !== location.origin) return res;\r\n\r\n    return caches.open(VERSION).then(cache => {\r\n      // TODO: figure out if the content is new and therefore the page needs a reload.\r\n      cache.put(e.request, res.clone());\r\n      return res;\r\n    });\r\n  }).catch(err => console.error(e.request.url, err));\r\n}\r\n\r\nfunction handleNoCacheMatch(e) {\r\n  return fetchFromNetworkAndCache(e);\r\n}"],"names":["VERSION","fetchFromNetworkAndCache","e","request","cache","mode","fetch","then","res","url","URL","origin","location","caches","open","put","clone","catch","err","console","error","handleNoCacheMatch","this","addEventListener","waitUntil","addAll","tryInCachesFirst","match","response","respondWith","keys","Promise","all","map","key","delete"],"version":3,"file":"service-worker.js.map"}