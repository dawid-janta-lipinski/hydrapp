{"mappings":"AAAA,IAAI,UAAU;AAEd,IAAI,CAAC,gBAAgB,CAAC,WAAW,SAAS,CAAC,EAAE;IAC3C,EAAE,SAAS,CAAC,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,CAAA,QAAS;QAC7C,OAAO,MAAM,MAAM,CAAC,EAAE;IACxB;AACF;AAEA,IAAI,CAAC,gBAAgB,CAAC,SAAS,SAAS,CAAC,EAAE;IACzC,IAAI,mBAAmB,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,CAAA,QAAS;QACxD,OAAO,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAA,WAAY;YAC7C,IAAI,CAAC,UACH,OAAO,mBAAmB;YAE5B,wCAAwC;YACxC,yBAAyB;YACzB,wBAAwB;YACxB,OAAO;QACT;IACF;IACA,EAAE,WAAW,CAAC;AAChB;AAEA,IAAI,CAAC,gBAAgB,CAAC,YAAY,SAAS,CAAC,EAAE;IAC5C,EAAE,SAAS,CAAC,OAAO,IAAI,GAAG,IAAI,CAAC,CAAA,OAAQ;QACrC,OAAO,QAAQ,GAAG,CAAC,KAAK,GAAG,CAAC,CAAA,MAAO;YACjC,IAAI,QAAQ,SACV,OAAO,OAAO,MAAM,CAAC;QACzB;IACF;AACF;AAEA,SAAS,yBAAyB,CAAC,EAAE;IACnC,kFAAkF;IAClF,kFAAkF;IAClF,6DAA6D;IAC7D,IAAI,EAAE,OAAO,CAAC,KAAK,KAAK,oBAAoB,EAAE,OAAO,CAAC,IAAI,KAAK,eAAe;IAE9E,OAAO,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAA,MAAO;QAClC,kEAAkE;QAClE,IAAI,CAAC,IAAI,GAAG,EAAE,OAAO;QACrB,2DAA2D;QAC3D,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,MAAM,KAAK,SAAS,MAAM,EAAE,OAAO;QAExD,OAAO,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,CAAA,QAAS;YACxC,gFAAgF;YAChF,MAAM,GAAG,CAAC,EAAE,OAAO,EAAE,IAAI,KAAK;YAC9B,OAAO;QACT;IACF,GAAG,KAAK,CAAC,CAAA,MAAO,QAAQ,KAAK,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE;AAC/C;AAEA,SAAS,mBAAmB,CAAC,EAAE;IAC7B,OAAO,yBAAyB;AAClC","sources":["src/js/service-worker.js"],"sourcesContent":["var VERSION = '24';\r\n\r\nthis.addEventListener('install', function(e) {\r\n  e.waitUntil(caches.open(VERSION).then(cache => {\r\n    return cache.addAll([]);\r\n  }))\r\n});\r\n\r\nthis.addEventListener('fetch', function(e) {\r\n  var tryInCachesFirst = caches.open(VERSION).then(cache => {\r\n    return cache.match(e.request).then(response => {\r\n      if (!response) {\r\n        return handleNoCacheMatch(e);\r\n      }\r\n      // Update cache record in the background\r\n      fetchFromNetworkAndCache(e);\r\n      // Reply with stale data\r\n      return response\r\n    });\r\n  });\r\n  e.respondWith(tryInCachesFirst);\r\n});\r\n\r\nthis.addEventListener('activate', function(e) {\r\n  e.waitUntil(caches.keys().then(keys => {\r\n    return Promise.all(keys.map(key => {\r\n      if (key !== VERSION)\r\n        return caches.delete(key);\r\n    }));\r\n  }));\r\n});\r\n\r\nfunction fetchFromNetworkAndCache(e) {\r\n  // DevTools opening will trigger these o-i-c requests, which this SW can't handle.\r\n  // There's probaly more going on here, but I'd rather just ignore this problem. :)\r\n  // https://github.com/paulirish/caltrainschedule.io/issues/49\r\n  if (e.request.cache === 'only-if-cached' && e.request.mode !== 'same-origin') return;\r\n\r\n  return fetch(e.request).then(res => {\r\n    // foreign requests may be res.type === 'opaque' and missing a url\r\n    if (!res.url) return res;\r\n    // regardless, we don't want to cache other origin's assets\r\n    if (new URL(res.url).origin !== location.origin) return res;\r\n\r\n    return caches.open(VERSION).then(cache => {\r\n      // TODO: figure out if the content is new and therefore the page needs a reload.\r\n      cache.put(e.request, res.clone());\r\n      return res;\r\n    });\r\n  }).catch(err => console.error(e.request.url, err));\r\n}\r\n\r\nfunction handleNoCacheMatch(e) {\r\n  return fetchFromNetworkAndCache(e);\r\n}"],"names":[],"version":3,"file":"service-worker.js.map","sourceRoot":"/__parcel_source_root/"}